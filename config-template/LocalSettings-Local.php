<?php
# This file was automatically generated by the MediaWiki 1.37.1
# installer. If you make manual changes, please keep track in case you
# need to recreate them later.
#
# See includes/DefaultSettings.php for all configurable settings
# and their default values, but don't forget to make changes in _this_
# file, not there.
#
# Further documentation for configuration settings may be found at:
# https://www.mediawiki.org/wiki/Manual:Configuration_settings

# Protect against web entry
if ( !defined( 'MEDIAWIKI' ) ) {
	exit;
}


## Uncomment this to disable output compression
# $wgDisableOutputCompression = true;
$wgSitename = "PKC";

## The URL base path to the directory containing the wiki;
## defaults for all runtime URL paths are based off of this.
## For more information on customizing the URLs
## (like /w/index.php/Page_title to /wiki/Page_title) please see:
## https://www.mediawiki.org/wiki/Manual:Short_URL
$wgScriptPath = "";

## The protocol and server name to use in fully-qualified URLs
$wgServer = "http://pkc.local";

## The URL path to static resources (images, scripts, etc.)
$wgResourceBasePath = $wgScriptPath;

## The URL paths to the logo.  Make sure you change this from the default,
## or else you'll overwrite your logo when you upgrade!
$wgLogos = [ '1x' => "$wgResourceBasePath/resources/assets/xlp.png" ];

## UPO means: this is also a user preference option

$wgEnableEmail = true;
$wgEnableUserEmail = true; # UPO

$wgEmergencyContact = "apache@ðŸŒ».invalid";
$wgPasswordSender = "apache@ðŸŒ».invalid";

$wgEnotifUserTalk = false; # UPO
$wgEnotifWatchlist = false; # UPO
$wgEmailAuthentication = true;

## Database settings
$wgDBtype = "mysql";
# $wgDBserver = "database";
$wgDBserver = "192.168.100.70";
$wgDBname = "my_wiki";
$wgDBuser = "wikiuser";
$wgDBpassword = "example";

# MySQL specific settings
$wgDBprefix = "";

# MySQL table options to use during installation or update
$wgDBTableOptions = "ENGINE=InnoDB, DEFAULT CHARSET=binary";

# Shared database table
# This has no effect unless $wgSharedDB is also set.
$wgSharedTables[] = "actor";

## Shared memory settings
$wgMainCacheType = CACHE_NONE;
$wgMemCachedServers = [];

## To enable image uploads, make sure the 'images' directory
## is writable, then set this to true:
$wgEnableUploads = true;
$wgUseImageMagick = true;
$wgImageMagickConvertCommand = "/usr/bin/convert";

# InstantCommons allows wiki to use images from https://commons.wikimedia.org
$wgUseInstantCommons = false;

# Periodically send a pingback to https://www.mediawiki.org/ with basic data
# about this MediaWiki instance. The Wikimedia Foundation shares this data
# with MediaWiki developers to help guide future development efforts.
$wgPingback = true;

## If you use ImageMagick (or any other shell command) on a
## Linux server, this will need to be set to the name of an
## available UTF-8 locale. This should ideally be set to an English
## language locale so that the behaviour of C library functions will
## be consistent with typical installations. Use $wgLanguageCode to
## localise the wiki.
$wgShellLocale = "C.UTF-8";

# Site language code, should be one of the list in ./languages/data/Names.php
$wgLanguageCode = "en";

# Time zone
$wgLocaltimezone = "UTC";

## Set $wgCacheDirectory to a writable directory on the web server
## to make your wiki go slightly faster. The directory should not
## be publicly accessible from the web.
#$wgCacheDirectory = "$IP/cache";
$wgSecretKey = "61cfc3ae1564e43b88aecae1de7e04acdb741f655415ebaf9565f40d30592896";

# Changing this will log out all existing sessions.
$wgAuthenticationTokenVersion = "1";

# Site upgrade key. Must be set to a string (default provided) to turn on the
# web installer while LocalSettings.php is in place
$wgUpgradeKey = "d91c42679b7a3b92";

## For attaching licensing metadata to pages, and displaying an
## appropriate copyright notice / icon. GNU Free Documentation
## License and Creative Commons licenses are supported so far.
$wgRightsPage = ""; # Set to the title of a wiki page that describes your license/copyright
$wgRightsUrl = "";
$wgRightsText = "";
$wgRightsIcon = "";

# Path to the GNU diff3 utility. Used for conflict resolution.
$wgDiff3 = "/usr/bin/diff3";

# To enable mod-rewrite and hide index.php
$wgUsePathInfo = TRUE;
$wgArticlePath = "/wiki/$1";

# The following permissions were set based on your choice in the installer
$wgGroupPermissions['*']['edit'] = false;

# Disable account registration
$wgGroupPermissions['*']['createaccount'] = false;

## Default skin: you can change the default skin. Use the internal symbolic
## names, e.g. 'vector' or 'monobook':
$wgDefaultSkin = "vector";

# Enabled skins.
# The following skins were automatically enabled:
wfLoadSkin( 'MonoBook' );
wfLoadSkin( 'Timeless' );
wfLoadSkin( 'Vector' );


# Enabled extensions. Most of the extensions are enabled by adding
# wfLoadExtension( 'ExtensionName' );
# to LocalSettings.php. Check specific extension documentation for more details.
# The following extensions were automatically enabled:
wfLoadExtension( 'CategoryTree' );
wfLoadExtension( 'Cite' );
wfLoadExtension( 'CiteThisPage' );
wfLoadExtension( 'CodeEditor' );
wfLoadExtension( 'ConfirmEdit' );
wfLoadExtension( 'Gadgets' );
wfLoadExtension( 'ImageMap' );
wfLoadExtension( 'InputBox' );
wfLoadExtension( 'Interwiki' );
wfLoadExtension( 'LocalisationUpdate' );
wfLoadExtension( 'MultimediaViewer' );
wfLoadExtension( 'Nuke' );
wfLoadExtension( 'PageImages' );
wfLoadExtension( 'ParserFunctions' );
wfLoadExtension( 'PdfHandler' );
wfLoadExtension( 'Poem' );
wfLoadExtension( 'Renameuser' );
wfLoadExtension( 'ReplaceText' );
wfLoadExtension( 'Scribunto' );
wfLoadExtension( 'SecureLinkFixer' );
wfLoadExtension( 'SpamBlacklist' );
wfLoadExtension( 'SyntaxHighlight_GeSHi' );
wfLoadExtension( 'TemplateData' );
wfLoadExtension( 'TextExtracts' );
wfLoadExtension( 'TitleBlacklist' );
wfLoadExtension( 'VisualEditor' );
wfLoadExtension( 'WikiEditor' );


# End of automatically generated settings.
# Add more configuration options below.
# 
# MLEB MediaWiki Language Extension Bundle
# Configuration
wfLoadExtension( 'Babel' );
wfLoadExtension( 'cldr' );

wfLoadExtension( 'CleanChanges' );
$wgCCTrailerFilter = true;
$wgCCUserFilter = false;
$wgDefaultUserOptions['usenewrc'] = 1;

wfLoadExtension( 'LocalisationUpdate' );
$wgLocalisationUpdateDirectory = "$IP/cache";

wfLoadExtension( 'Translate' );
$wgGroupPermissions['user']['translate'] = true;
$wgGroupPermissions['user']['translate-messagereview'] = true;
$wgGroupPermissions['user']['translate-groupreview'] = true;
$wgGroupPermissions['user']['translate-import'] = true;
$wgGroupPermissions['sysop']['pagetranslation'] = true;
$wgGroupPermissions['sysop']['translate-manage'] = true;
$wgTranslateDocumentationLanguageCode = 'qqq';
$wgExtraLanguageNames['qqq'] = 'Message documentation'; # No linguistic content. Used for documenting messages

wfLoadExtension( 'UniversalLanguageSelector' );
#
#
# end of MLEB Config

#
# SMW
wfLoadExtension( 'SemanticMediaWiki' );
enableSemantics(  );

#
# Content Translation
wfLoadExtension( 'ContentTranslation' );
$wgContentTranslationSiteTemplates['cx'] = 'https://cxserver.wikimedia.org/v1';

#
# Enable BETA Feature
wfLoadExtension( 'BetaFeatures' );

#
# Enable Global Preference
wfLoadExtension( 'GlobalPreferences' );

#
# Other extensions
wfLoadExtension( 'DrawioEditor' );
wfLoadExtension( 'intersection' );
wfLoadExtension( 'NativeSvgHandler' );

#
# PDF Embedd
wfLoadExtension( 'PDFEmbed' );
# Default width for the PDF object container.
$wgPdfEmbed['width'] = 800;
# Default height for the PDF object container.
$wgPdfEmbed['height'] = 1090;
#

# Enable Media Playing
wfLoadExtension( 'MultimediaViewer' );
# Allow user the usage of the pdf tag
$wgGroupPermissions['*']['embed_pdf'] = true;
#
# 3D Extension
wfLoadExtension( '3D' );
$wg3dProcessor = [
    '/usr/bin/xvfb-run',
    '-a',
    '-s',
    '-ac -screen 0 1280x1024x24',
    '/var/www/html/extensions/3d2png/3d2png.js'
];
#
$wgUploadWizardConfig['patents'] = [
	'extensions' => [ 'stl' ],
	'template' => '3dpatent',
	'url' => [
		'legalcode' => '//wikimediafoundation.org/wiki/Wikimedia_3D_file_patent_license',
		'warranty' => '//meta.wikimedia.org/wiki/Wikilegal/3D_files_and_3D_printing',
		'license' => '//meta.wikimedia.org/wiki/Wikilegal/3D_files_and_3D_printing',
		'weapons' => '//meta.wikimedia.org/wiki/Wikilegal/3D_files_and_3D_printing#Weapons',
	],
];
# Add new file types that allows for more File Types to be uploaded.
$wgFileExtensions = array( 'png', 'gif', 'jpg', 'jpeg', 'doc',
    'xls', 'mpp', 'pdf', 'ppt', 'tiff', 'bmp', 'docx', 'xlsx',
    'pptx', 'ps', 'odt', 'ods', 'odp', 'odg', 'mp4', 'zip',
    'stl', 'sla', 'svg'
);
#
$wgTrustedMediaFormats[] = "application/sla";
$wgTrustedMediaFormats[] = "application/octet-stream";
# Enable MMV for 3D Objects
$wgMediaViewerExtensions['stl'] = 'mmv.3d';
#
# 3DAlloy
wfLoadExtension( '3DAlloy' );
$wgFileExtensions = array_merge(
	$wgFileExtensions, array(
		'json', '3dj', '3djson', 'three',
		'buff', 'buffjson',
		'obj',
		'stl', 'stlb', 'json'
	)
  );
#
# Loading Math extension
wfLoadExtension( 'Math' );
// ensure 'mathml'; is added to the $wgMathValidModes array;
$wgMathValidModes[] = 'mathml';
// Set Mathoid as default rendering option;
$wgDefaultUserOptions['math'] = 'mathml';
#

# Loading Geodata
wfLoadExtension( 'GeoData' );
wfLoadExtension( 'JsonConfig' );
#
# Kartographer
wfLoadExtension( 'Kartographer' );
#
# Spotify Embedd
wfLoadExtension( 'EmbedSpotify' );
#
# Page Forms
wfLoadExtension( 'PageForms' );
#
# Google Maps Service
$egMapsGMaps3ApiKey = 'AIzaSyBQuxfm0meYxGrQfdVY1FeiINS0nAW3avo';
$egMapsDefaultService = 'leaflet';
wfLoadExtension( 'Maps' );
#
#
wfLoadExtension( 'Cargo' );
wfLoadExtension( 'Widgets' );
wfLoadExtension( 'TemplateStyles' );
wfLoadExtension( 'GoogleDocs4MW' );
wfLoadExtension( 'TemplateWizard' );
#
# Configuration to enable keycloak
wfLoadExtension( 'OpenIDConnect' );
wfLoadExtension( 'PluggableAuth' );
# http://localhost:32060/auth/realms/pkc-realm/.well-known/openid-configuration --> check here
$wgOpenIDConnect_Config['http://kck.pkc.local:8080/auth/realms/pkc-realm/'] = [
  'clientID' => 'pkc-client',
  'clientsecret' => 'sl8259AJutrN672QlHBRd6lnTizJ8iVk',
  'scope' => [ 'openid', 'profile', 'email' ]
];
$wgGroupPermissions['*']['autocreateaccount'] = true;
$wgPluggableAuth_EnableLocalLogin = true;
#
wfLoadExtension( 'Matomo' );
$wgMatomoURL = "mtm.pkc.local";
$wgMatomoIDSite = "1";
#
# Enable String Functions
$wgPFEnableStringFunctions = true;
#
# Interactive Timeline Extensions
wfLoadExtension("InteractiveTimeline");
# Enable for debugging
// $wgShowExceptionDetails = true;
// $wgShowDBErrorBacktrace = true;
// $wgShowSQLErrors = true;
// $wgDebugToolbar = true;
// $wgDevelopmentWarnings = true;
