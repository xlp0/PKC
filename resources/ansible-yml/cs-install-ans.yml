# ansible-playbook -i hosts ./cs-install-ans.yml
---
- name: install ansible agent on target machine and necessary script to perform off-site backup
  hosts: all
  become: yes
  vars_files:
    - ./config/default.yml

  tasks:
  - name: Update apt-get
    apt:
      update_cache: yes
      cache_valid_time: 3600
      allow_unauthenticated: yes

  - name: Install software-properties-common
    apt:
      name: software-properties-common
      state: present

  - name: Add ansible/ansible
    ansible.builtin.apt_repository:
      repo: ppa:ansible/ansible

  - name: Install Ansible
    apt:
      name: ansible
      state: present

  - name: Copy Off-Site backup file
    copy:
      src: "{{ item.src }}"
      dest: "{{ item.dest }}"
      remote_src: false
    loop:
      - {src: './cs-remote-host', dest: './cs/'}
      - {src: '~/.ssh/OregonCluster.pem', dest: '/home/ubuntu/.ssh/'}   ## replace with ansible private key
      - {src: './script/cs-offsite-restore.sh', dest: './cs/'}
      - {src: './cs-offsite-restore.yml', dest: './cs/'}
      - {src: './script/cs-backup.sh', dest: './cs/'}
    become: true

  - name: Changing perm of "cs-offsite-restore.sh", adding "+x"
    file: dest=./cs/cs-offsite-restore.sh mode=a+x

  - name: Changing perm of "cs-backup.sh", adding "+x"
    file: dest=./cs/cs-backup.sh mode=a+x

  - name: Set Cronjob for mirorring 
    cron: name=pkc_mirror special_time=monthly job="/usr/bin/certbot renew"
    when: ansible_facts['os_family'] == "Debian"